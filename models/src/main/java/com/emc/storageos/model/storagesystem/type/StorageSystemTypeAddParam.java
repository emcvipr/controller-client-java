/*
 * Copyright (c) 2008-2015 EMC Corporation
 * All Rights Reserved
 */
package com.emc.storageos.model.storagesystem.type;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

@XmlRootElement(name = "storagesystem_type_add")
@XmlAccessorType(XmlAccessType.FIELD)
public class StorageSystemTypeAddParam {

    private String storageTypeName;
    private String metaType;
    private String storageTypeId;
    private boolean isSmiProvider = false;
    private boolean isDefaultSsl = false;
    private String storageTypeDispName;
    private boolean isDefaultMDM = false;
    private boolean isOnlyMDM = false;
    private boolean isElementMgr = false;
    private String nonSslPort;
    private String sslPort;
    private String driverClassName;
    private boolean isSecretKey = false;

    public StorageSystemTypeAddParam() {
    }

    /**
     * Storage System Type ID internal URI generated by system for unique identification
     *
     */
    public String getStorageTypeId() {
        return storageTypeId;
    }

    public void setStorageTypeId(String storageTypeId) {
        this.storageTypeId = storageTypeId;
    }

    /**
     * Storage System Type name, example VMAX
     */
    public String getStorageTypeName() {
        return storageTypeName;
    }

    public void setStorageTypeName(String storageSystemTypeName) {
        this.storageTypeName = storageSystemTypeName;
    }

    /**
     * Storage System Type type, example file, block and object
     */
    public String getMetaType() {
        return metaType;
    }

    public void setMetaType(String storageType) {
        this.metaType = storageType;
    }

    /**
     * Is this Storage System Type is managed using SMI Provider. If true CoprHD should connect through Provider only
     */
    public boolean getIsSmiProvider() {
        return isSmiProvider;
    }

    public void setIsSmiProvider(boolean isSmiProvider) {
        this.isSmiProvider = isSmiProvider;
    }

    /**
     * Display name for storage system type, example EMC VMAX
     */
    public String getStorageTypeDispName() {
        return storageTypeDispName;
    }

    public void setStorageTypeDispName(String storageTypeDispName) {
        this.storageTypeDispName = storageTypeDispName;
    }

    /**
     * Storage system type support SSL connection by default. If true provide SSL port
     */
    public boolean getIsDefaultSsl() {
        return isDefaultSsl;
    }

    public void setIsDefaultSsl(boolean isDefaultSsl) {
        this.isDefaultSsl = isDefaultSsl;
    }

    /**
     * Is the storage system type support Meta Data Manager as default. This is applicable only for ScaleIO arrays
     */
    public boolean getIsDefaultMDM() {
        return isDefaultMDM;
    }

    public void setIsDefaultMDM(boolean isDefaultMDM) {
        this.isDefaultMDM = isDefaultMDM;
    }

    /**
     * Is the storage system type support only Meta Data Manager. This is applicable only for ScaleIO arrays
     */
    public boolean getIsOnlyMDM() {
        return isOnlyMDM;
    }

    public void setIsOnlyMDM(boolean isOnlyMDM) {
        this.isOnlyMDM = isOnlyMDM;
    }

    /**
     * Whether the Storage System Type is managed by Element Manager. Applicable for ScaleIO
     */
    public boolean getIsElementMgr() {
        return isElementMgr;
    }

    public void setIsElementMgr(boolean isElementMgr) {
        this.isElementMgr = isElementMgr;
    }

    /**
     * Whether the Storage System Type uses a secret key.  This applies to Ceph.
     */
    public boolean getIsSecretKey() {
        return isSecretKey;
    }

    public void setIsSecretKey(boolean isSecretKey) {
        this.isSecretKey = isSecretKey;
    }

    /**
     * SSL port number, if SSL is supported and enabled
     */
    public String getSslPort() {
        return sslPort;
    }

    public void setSslPort(String sslPort) {
        this.sslPort = sslPort;
    }

    /**
     * Storage System Type port number.
     */
    public String getNonSslPort() {
        return nonSslPort;
    }

    public void setNonSslPort(String nonSslPort) {
        this.nonSslPort = nonSslPort;
    }

    /**
     * Storage System Type driver class name. This class is defined in South Bound SDK of CoprHD that device driver developer should
     * implement.
     */
    public String getDriverClassName() {
        return driverClassName;
    }

    public void setDriverClassName(String driverClassName) {
        this.driverClassName = driverClassName;
    }

    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("StorageSystemTypeRestRep [storageTypeId=");
        builder.append(storageTypeId);
        builder.append(", storageTypeName=");
        builder.append(storageTypeName);
        builder.append(", metaType=");
        builder.append(metaType);
        builder.append(", isSmiProvider=");
        builder.append(isSmiProvider);
        builder.append(", isDefaultSsl=");
        builder.append(isDefaultSsl);
        builder.append(", nonSslPort=");
        builder.append(nonSslPort);
        builder.append(", sslPort=");
        builder.append(sslPort);
        builder.append(", driverClassName=");
        builder.append(driverClassName);
        builder.append(", isSecretKey=");
        builder.append(isSecretKey);
        builder.append("]");
        return builder.toString();
    }
}
